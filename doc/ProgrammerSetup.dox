/*! \page ProgrammerSetup 设置 JeVois 编程


本教程将帮助您完成 JeVois 编程的设置。

如果您想要做的只是使用现有的捆绑机器视觉算法，并且可能只用 Python 开发新模块，那么只需从 http://jevois.org/start 获取并刷新 microSD 映像并检查：

- \ref UserGettingStarted
- \ref ProgrammerPythonLive

编程环境是 Ubuntu 64 位，版本 20.04（focal）或 18.04（bionic）。自 \jvversion{1.12.0} 起，对 16.04 LTS（xenial）的支持已终止，因为在此旧版 Ubuntu 上编译最新代码（例如 OpenCV 4.0.1）变得越来越困难。

从 \jvversion{1.15.0} 开始，官方 JeVois 开发平台是 Ubuntu 20.04 (focal)。

从 \jvversion{1.21.0} 开始，官方 JeVois 开发平台是 Ubuntu 24.04 (noble)。

通常，在虚拟机（例如 VirtualBox）中设置编程环境是可以的。但请注意，您可能需要解决与向虚拟机授予对摄像机或 microSD 卡的正确访问权限有关的问题。有关更多信息，请参阅 \ref Virtualbox 和 \ref ProgrammerVbox 。

\youtube{pgd7pW1XDU8}

上面的视频将带你了解以下步骤：

- 在 VirtualBox 上安装 Ubuntu 18.04 (bionic)；较新的 Ubuntu 20.04 或 24.04 的步骤类似。
- 安装 jevois ubuntu (.deb) 软件包
- 安装 jevois-inventor 并试用
- 从 github 获取最新的 jevois 源代码
- 编译该源代码，适用于主机（您的 Intel 计算机）和平台（JeVois 内的 ARM CPU）
- 将新编译的代码刷入 microSD

根据您的目标选择方法 
--------------------------------------------

根据您的目标，可能不需要上述视频中显示的所有步骤。

JeVois 软件开发包的快速概览（有关更多详细信息，请参阅 \ref ProgrammerSource ）：

- \b jevois-opencv： 为主机编译的 OpenCV，其设置与 JeVois 平台硬件使用的设置相匹配。我们将此包安装到 /usr/share/jevois-opencv-4.x.0 中，这样它就不会干扰您主机系统上可能安装的任何其他 OpenCV，而这些 OpenCV 可能是其他软件所需要的。

- \b jevois-host： 为在主机上执行而编译的 JeVois 核心软件

- \b jevois-platform： JeVois 核心软件交叉编译，用于在 JeVois 平台硬件上执行

- \b jevoisbase-host： 为在主机上执行而编译的 JeVois 基础模块

- \b jevoisbase-platform： JeVois 基础模块交叉编译，用于在 JeVois 平台硬件上执行

- \b jevois-sdk： 编译的引导加载程序、根文件系统和其他配置文件。

- \b jevois-sdk-dev： 为 JeVois 平台架构编译的交叉编译器和交叉编译库。

记住这一点：

- <b>如果您只想编译一个新模块：</b>您无需重新编译 \b jevois 和 \b jevoisbase ，只需使用 JeVois Ubuntu 软件包提供的预编译版本。您只需：
  + 安装 Ubuntu 软件包 \b jevois-sdk-dev
  + 从 github 获取 \b samplemodule 作为源代码的起点，或使用 \b jevois-sdk-dev 提供的脚本 `jevois-create-module` 从头开始创建一个新模块。
  + 使用模块目录中的 `rebuild-host.sh` and `rebuild-platform.sh` 脚本编译您的模块。

- <b>如果您想要更新到最新的 jevois 和 jevoisbase，并可能对其进行修改，则需要制作新的机器视觉模块：</b>
  + 严格按照上述视频中的所有步骤（下面还将进一步解释）进行操作。
  + 确保从 github 进行更新，并按以下顺序编译 \b jevois 和 \b jevoisbase （首先是 \b jevois ，然后是 \b jevoisbase ）。

- <b>如果您想破解在 JeVois 上运行的 Linux 内核或向其操作系统添加软件：</b>
  + 这仅推荐给高级程序员！需要内核破解知识和 buildroot 工作流程知识。
  + 使用 jevois-sdk repo 中的 `rebuild-os.sh`，它可以在 docker 容器中运行。


升级 Debian 软件包 
-----------------------------

如果第一次安装 JeVois Debian 软件包，请跳至下一部分。

- 升级到新版本的 JeVois 时，我们建议删除所有以前生成的文件，并在 \b /var/lib/jevois-build 和 \b /var/lib/jevois-microsd 中重建主机的 \b /jevois 和平台的暂存区，如下所示：
  \verbatim
sudo apt purge jevois-sdk-dev jevois-sdk jevoisbase-platform jevoisbase-host jevois-platform jevois-host jevois-opencv
sudo rm -rf /jevois /var/lib/jevois-build /var/lib/jevois-microsd
  \endverbatim

- 然后按照下面详细说明重新安装。

- 要摆脱 Debian 依赖地狱：

  如果在之前安装 VeVois 软件包时出现问题（例如，被用户中断、电源故障等），您可能已进入 <em>Debian 依赖地狱</em>，由于依赖关系损坏或安装待处理，您无法再安装软件包。试试这个：

  \verbatim
sudo apt -f install
sudo apt purge jevois-sdk-dev jevois-sdk jevoisbase-platform jevoisbase-host jevois-platform jevois-host jevois-opencv
dpkg --remove jevois-sdk-dev jevois-sdk jevoisbase-platform jevoisbase-host jevois-platform jevois-host jevois-opencv
  \endverbatim

  最终结果应该是 `dpkg --list | grep jevois` 未返回任何结果，并且 `sudo apt -f update` 没有任何内容可更新。然后从头再试一次。

首次安装 Debian 软件包 
-----------------------------------------

- 首先查看 \ref ProgrammerSource

- 除非您想重新编译 JeVois 中运行的 Linux 内核（大多数人不想这样做），或者 JeVois 中的操作系统和 Unix 实用程序（大多数人也不想这样做），否则请按照 http://jevois.usc.edu 上的说明安装包 \b jevois-sdk-dev ，它将把所有其他必需的包作为依赖项引入。

- 如果您确实想要重新编译内核或操作系统，则需要从源代码安装所有内容，如 [jevois 存储库的 INSTALL 文件](https://github.com/jevois/jevois/blob/master/INSTALL) 中所述。

- 现在查看 \ref ProgrammerOrganization 以熟悉各种文件的位置。

从 GitHub 获取最新源代码 
------------------------------------------

如果您想要从 github 更新到最新版本的 JeVois，则只需执行此操作。如果您只想创建自己的机器视觉模块，则只需安装 \b jevois-sdk-dev ，如上所述。使用脚本 `jevois-create-module` 创建一个新模块。请参阅 \ref ProgrammerHello 教程中我们如何操作。

\verbatim
cd
git clone https://github.com/jevois/jevois.git
git clone https://github.com/jevois/jevoisbase.git
git clone https://github.com/jevois/jevois-sdk.git
git clone https://github.com/jevois/samplemodule.git
git clone https://github.com/jevois/samplepythonmodule.git
git clone https://github.com/jevois/jevois-tutorials.git
git clone https://github.com/jevois/jevoisextra.git
\endverbatim

\note 如果升级，请 cd 到每个目录并运行 `git pull` 命令以使您的副本与主存储库保持同步。

首次编译之前：获取贡献的软件包 
---------------------------------------------------------------------

从 \jvversion{1.5} 开始此步骤是自动的，并且可以在该版本及更高版本中跳过。

目录 <b>jevoisbase/Contrib</b> 用于收集贡献的源代码包。

在您第一次尝试编译 jevoisbase 之前，您应该下载并修补那些贡献的软件包，如下所示：

\verbatim
cd ~/jevoisbase/Contrib
./reinstall.sh
\endverbatim

编译 JeVois、JeVoisBase、samplemodule 
------------------------------------------

- 首先参阅 \ref CompilingJeVois

- 然后参见 \ref CompilingJeVoisBase

- 对于 \b samplemodule ，编译说明和脚本与 \b jevoisbase 相同

- 最后参见 \ref FlashingToSD

- 当您准备从头开始编写新模块时，只需阅读整个 \ref Programmer 。


\note 如果您从 GitHub 上的最新版本重新编译 jevois 和 jevoisbase，则您还应将这些版本刷入 microSD，然后再继续编译和安装您自己的模块到 microSD。否则，您的 microSD 上可能会出现旧版本的 jevois 和 jevoisbase（如果是从 http://jevois.org/start 上的 microSD 映像安装的），而这些旧版本可能无法与针对 GitHub 上的最新版本 jevois 编译的新模块一起使用。有关详细信息，请参阅 \ref FlashingToSD ，尤其是部分：从 github 提取最新版本并重新刷入 - 完全重新编译。

*/

