/*! \page User120fps 以 120 帧/秒录制视频并带有慢动作效果


让我们使用 JeVois 相机以 120 帧/秒的速度捕捉一些低分辨率视频。这将使我们在以正常的 30 帧/秒速率观看视频时获得慢动作效果。

SaveVideo 模块 
--------------------

首先检查 \jvmod{SaveVideo} 模块的文档。我们将使用此模块将视频录制到 MicroSD。

活动 1 - 捕获并显示 
---------------------------------

我们首先在具有 USB 输出的模式下使用 \jvmod{SaveVideo}，这样我们就可以使用主机上的视频捕获软件检查操作是否正常，并掌握它。

- 使用微型 USB 线将您的 JeVois 智能相机连接到主机。

- 启动视频捕获软件（如果需要，请参阅 \ref User ），并设置为 <b>YUYV 320x240 @ 60fps</b>，如果您在 MicroSD 卡上使用默认的 <b>videomappings.cfg</b>，则应该选择 \jvmod{SaveVideo} 模块。

- 建立与 JeVois 命令行界面的串行 USB 连接（如果需要，请参阅 \ref UserCli ）。

- 发出命令 \c help、\c info 等，以确保命令行通信一切正常。在 Linux 上，请记住，如果您在此处收到一些错误消息，则可能需要终止 <b>ModemManager</b>，因为它可能会用干扰您命令的调制解调器配置命令轰炸 JeVois。如果需要，请参阅 \ref USBserialLinux 。

观察捕获的视频顶部的覆盖层：<b>SaveVideo: not recording</b>。在开始之前，让我们启用串行 USB 连接的输出消息。向 JeVois 命令行界面发出以下命令：

\verbatim
setpar serout USB
\endverbatim

现在，我们将看到串行输出消息（由正在运行的机器视觉模块发出并供用户和/或 Arduino 使用的消息）。有关 \b serout 和 \b serlog 的详细信息，请参阅 \ref UserCli 。

\jvmod{SaveVideo} 模块有两个额外的命令，只有在加载该模块时才可用。因此，当您加载模块时（例如，通过选择分辨率，如上所示），这些命令在命令行界面中可用，当卸载该模块并加载另一个模块时，它们会消失。要检查 \jvmod{SaveVideo} 模块提供的内容，您应该：

- 查看 \jvmod{SaveVideo} 模块的文档页面。

- 在串行终端中发出命令 \c help 并观察输出，特别注意以下部分：

\verbatim
MODULE-SPECIFIC COMMANDS:

start - start saving video
stop - 停止保存视频并增加视频文件数量

\endverbatim

and

\verbatim
PARAMETERS:

Video Saving Options:
  --fps (double) default=[30]
    文件中存储的视频帧数/秒，用于录制和播放。请注意，如果捕获速度快于此处指定的帧速率，视频写入器将丢帧。例如，如果以 120fps 的速度捕获，请确保将此参数设置为 120，否则默认情况下，即使捕获以 120fps 运行，保存的视频也将默认为 30fps。
       Exported By: SaveVideo

  --fourcc (string) default=[MJPG] Regex:[^\w{4}$]
    要使用的编解码器的 FourCC。OpenCV VideoWriter 文档未明确说明支持哪些编解码器。据推测，ffmpeg 库在 OpenCV 内部使用。因此，任何受 ffmpeg 支持的视频编码器都应该可以使用。经过测试的编解码器包括：MJPG、MP4V、AVC1。请确保您还选择了正确的文件扩展名（例如，MJPG 为 .avi，MP4V 为 .mp4，等等）
       Exported By: SaveVideo

  --filename (string) default=[video%06d.avi]
    要写入的视频文件的名称。如果路径不是绝对路径，则将在其前面添加 /jevois/data/savevideo/。名称应包含一个 int 参数的类似 printf 的指令，该指令将从 0 开始，并在每个 streamoff 命令上递增。
       Exported By: SaveVideo

\endverbatim

也就是说，\jvmod{SaveVideo} 有两个自定义命令（\c start 和 \c stop ）和三个参数（\p fps、\p fourcc 和 \p filename）。

要开始录制，请发出命令

\verbatim
start
\endverbatim

您应该看到顶部覆盖现在显示 \b RECORDING ，并且录制的文件名显示在视频的底部。

\image html save-video.png

还请注意命令行窗口中的消息：
\verbatim
SAVESTART
OK
SAVETO /jevois/data/savevideo/video000001.avi
SAVEDNUM 100
SAVEDNUM 200
SAVEDNUM 300
SAVEDNUM 400
SAVEDNUM 500
SAVEDNUM 600
\endverbatim

要停止录制，请发出以下命令：

\verbatim
stop
\endverbatim

并且录制视频顶部的状态将切换回 <b>not recording</b>。您可以根据需要多次开始和停止。每次，视频文件的名称都会增加。当您停止时，串行终端将显示如下消息：

\verbatim
SAVESTOP
OK
\endverbatim

正如 \jvmod{SaveVideo} 模块的文档中所述，尝试以高帧速率录制视频时应该注意两件事：

- 如果使用带有 USB 输出的视频映射，帧速率可能会受到主机可以抓取和显示的最大速率的限制。例如，在许多主机上，显示刷新率可能是 60Hz。在这些计算机上使用视频捕获软件可能会将最大显示速率限制为 60 帧/秒，从而限制捕获和保存速率。使用没有 USB 输出的视频映射时，这不是问题。

- \p fps 参数应设置为您想要保存视频的速率。如果您根据视频映射以 60 帧/秒的速度捕获，但 \p fps 设置为 30，则保存将以 30 fps 进行。此速率限制由 OpenCV VideoWriter 内部完成。因此，只需确保将 \p fps 参数设置为您想要保存的速率即可。

下面我们将探讨没有视频输出的高帧率录制。


活动2：无显示捕获 
-----------------------------------

让我们尝试以 120 帧/秒的速度录制一些视频，以获得炫酷的慢动作效果。我们将使用非常低的分辨率，因此不要期望像那些 400 美元的头戴式运动摄像机那样获得出色的视频质量。请记住，JeVois 是一种机器视觉设备，它捕获的视频旨在用于机器视觉目的，而不是为了美观。

- 首先，如果主机上的视频捕获软件仍在运行，请退出它。

- 如 \jvmod{SaveVideo} 模块文档中所述，如果 jevois::Engine 的 \c camturbo 参数已打开（默认情况下），则此模块可能会受到 DMA 一致性伪影的影响。 \c camturbo 参数放宽了摄像头传感器捕获的视频缓冲区的一些缓存一致性约束，这使得 JeVois 处理器能够更快地从内存中访问视频像素数据。但是对于不进行太多处理的模块，有时会产生视频伪影，我们推测这是因为来自先前帧的一些视频数据仍在 CPU 缓存中，因此 CPU 不会再次从主内存中获取这些数据。

为了避免在视频中看到看似错误像素颜色的短条纹，让我们禁用 \c camturbo：
  + 将 MicroSD 卡从 JeVois 中取出并连接到计算机
  + 编辑 MicroSD 卡上的 <b>JEVOIS:/config/params.cfg</b>，然后将 \c camturbo 设置为 false。

- 让我们选择一个每秒 120 帧且没有 USB 输出的视频映射。Jevois 相机传感器支持分辨率为 176x144 和 88x72 的 120 fps。因为我们没有视频输出，所以在这里我们可以使用 \c setmapping2 命令并直接指定所需的相机分辨率，而无需编辑 MicroSD 卡上的 \b videomappings.cfg 文件。试试这个：

  \verbatim
  setmapping2 YUYV 176 144 120.0 JeVois SaveVideo
  setpar fps 120
  streamon
  \endverbatim

  这将配置 JeVois 的相机传感器，以 120fps 的速度捕获 176x144 图像，同时使用 \jvmod{SaveVideo} 模块。我们还让视频编写器知道我们不仅要捕获，还要以 120fps 的速度保存视频。最后，因为我们使用的是没有 USB 输出的视频映射，所以我们需要告诉相机开始流式传输，因为没有主机可以执行此操作。

- 现在发出 \c start 命令，您将以 120fps 开始录制。

- 完成后，发出 \stop 命令以确保录制的视频文件正确关闭并完成。

- 从 JeVois 相机中取出 MicroSD 卡，然后在卡上的 <b>JEVOIS:/data/savevideo/</b> 中查找录制的视频文件。


这是一个示例视频，首先以 30 帧/秒的速度录制，然后以 120 帧/秒的速度录制：

30帧/秒的视频：

\youtube{pBw71K4ViS4}

120 帧/秒视频：

\youtube{r-vjA9-Fobs}

\note 您应该注意一个警告：在某些现代操作系统（例如最新的 Mac OSX）上，以 120fps 录制的视频可能仍会以真实的速度播放，而不是给您慢动作效果。播放器（例如 Quicktime 播放器）只会丢弃帧以达到文件内指示的视频帧速率。因此，在 Mac 上播放时，120fps 和 30fps 的电影最初看起来完全相同。我们必须先将它们解码为单个帧，然后将这些帧重新编码为声明为 30fps 速率的电影，才能在 120fps 电影中看到慢动作效果。


活动 3：一旦 JeVois 插入，就开始保存视频 
---------------------------------------------------------------------

要在 JeVois 插入后立即开始保存，我们只需将上述命令复制到 <b>JEVOIS:/config/initscript.cfg</b> 中。此脚本在 JeVois 启动后立即运行。因此，编辑 \b initscript.cfg 以包含：

\verbatim
setmapping2 YUYV 176 144 120.0 JeVois SaveVideo
setpar fps 120
streamon
start
\endverbatim

现在，每次您为 JeVois 智能相机供电时，它都会录制视频并将其保存到 MicroSD 卡中。

您不再需要主机，您可以使用 USB 手机充电器或 USB 电池组为 JeVois 供电。

需要注意的是，您可能不会发出 \c stop 命令，而是在完成后拔下 JeVois。视频文件不会完全关闭。对于 MP4 视频，这没问题，文件仍然可以播放到被中断的位置。

*/

