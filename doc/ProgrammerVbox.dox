/*! \page ProgrammerVbox 使用预装的 jevois-sdk VirtualBox 进行开发

从 \jvversion{1.12.0} 开始，我们提供了预先配置和预安装的 VirtualBox 映像，以方便开始使用 C++ 编程 JeVois。

为了创建 VirtualBox 映像，我们经历了以下步骤：

\youtube{pgd7pW1XDU8}

- 在 VirtualBox 上安装 Ubuntu 18.04 (bionic)
- 安装 jevois ubuntu (.deb) 软件包
- 安装 jevois-inventor 并试用
- 从 github 获取最新的 jevois 源代码
- 编译该源代码，适用于主机（您的 Intel 计算机）和平台（JeVois 内的 ARM CPU）
- 将新编译的代码刷入 microSD

现在您可以安装并运行这个预先配置和预安装的虚拟机。

安装并运行机器 
----------------------------------

- 从 http://jevois.org/start/software.html 下载最新的虚拟磁盘映像 (vdi)

- 使用 7-zip (7z) 解压程序解压。请注意，它将解压为一个 25GB 的文件，并且虚拟磁盘设置为允许增长到 50GB，因此请确保您有足够的磁盘空间。

- 下载并安装最新版本的 VirtualBox 和最新的扩展包（重要）。

- 如果您的主机运行 Linux，您需要运行此命令以允许访问 USB 端口：
\verbatim
sudo adduser $USER vboxusers
\endverbatim

- 重启电脑。Mac 用户：是的，您确实需要重启 Mac，否则 VirtualBox 中的视频捕获将无法工作。Linux 用户：您也一样，必须重启。Windows 用户：您已经习惯了这样做！

- 启动 VirtualBox 并创建一个新的虚拟机。选择一个名称（此处为 \a ubusdk ）并将其配置为 Linux Ubuntu 64 位。

\jvimg{sdkvbox1.png, 25%}

- 根据您的硬件选择一个好的内存大小，通常采用绿色和红色之间的界限内的推荐大小效果很好;在这台有 768GB RAM 的机器上，我选择了 100GB，这对于虚拟机来说应该足够了。

\jvimg{sdkvbox2.png, 25%}

- 选择使用现有的虚拟硬盘映像，然后使用名称右侧的文件选择器图标选择您下载并解压的.vdi 文件。

\jvimg{sdkvbox3.png, 25%}

- 在启动虚拟机之前，单击其设置并调整处理器核心数。再次选择绿色和红色之间的极限值处的推荐数量（此处，VirtualBox 似乎在这台 96 核机器上最多使用 32 个核心），

\jvimg{sdkvbox4.png, 25%}

- 然后您需要安装 USB 设备过滤器。这样，您的 JeVois 相机和 USB 转 microSD 适配器（您将使用它来为 JeVois 刷入新的 microSD 卡）将可供虚拟机使用，而不是在您插入时由主机使用。插入一个正常工作的 JeVois 相机（内置 microSD 卡）和一个内置 microSD 卡的 USB 转 microSD 适配器（如果您只有一张卡，您可以一个接一个地执行这些操作）。主机将检测到它们，并且默认情况下将提供给主机。现在，在虚拟机的设置中，转到 \a USB（或者，在某些版本的 VirtualBox 中，转到 \s 端口，然后单击 \a USB）。

- 选择 USB 3.0 xHCI

- 单击带有 USB 插头和 '+' 的小图标以添加 USB 过滤器；为 JeVois 添加一个，为您的 microSD 适配器添加一个（这里是 Transcend 品牌）：

\jvimg{sdkvbox5.png, 40%}

- 现在您应该已经安装了两个过滤器。断开 JeVois 和 microSD 适配器。

\jvimg{sdkvbox6.png, 25%}

- 启动虚拟机并让其启动。它将自动登录用户 \a jevois （或 1.20.0 版本上的用户 \a jv ）。

- 如果你需要 sudo，密码是 \a jevois

- 连接 JeVois 并通过双击 Ubuntu 桌面上的图标来启动 jevois-inventor。如果未检测到 JeVois，您可能需要通过单击（在某些机器上右键单击）虚拟机屏幕右下角的小 USB 插头图标来再次启用过滤器。您可以对闪存卡读卡器执行相同的操作。

\jvimg{sdkvbox7.png, 40%}

- 您现在应该看到 Inventor 检测到了 JeVois。

\jvimg{sdkvbox8.png, 40%}

- 我们已经安装了所有必要的软件包。因此您可以开始编译代码了。

- 例如，启动终端（CTRL-ALT-T），然后输入 
\verbatim
jevois-create-module MyVendor MyModule # or jevoispro-create-module
cd mymodule
./rebuild-host.sh       # or ./rebuild-pro-host.sh
./rebuild-platform.sh   # or ./rebuild-pro-platform-pdeb.sh
\endverbatim

这将编译模块，然后交叉编译模块。您应该不会收到任何错误，这表明所有 jevois 工具、交叉编译器、库等都已正确安装并准备就绪。

\jva33：`./rebuild-platform.sh` 将创建一个 .jvpkg 包，您应将其复制到 microSD 上的 JEVOIS:/packages/。下次相机重新启动时，它将安装该包。

\jvpro: `./rebuild-pro-platform-pdeb.sh` 将创建一个 .deb 包，您可以将其复制到 microSD，然后使用 `dpkg -i /path/to/package.deb` 安装

\jvimg{sdkvbox9.png, 40%}

下一步 
----------

现在你已经准备好阅读 \ref Programmer

你可以跳过 \ref Virtualbox

而且，在 \ref CompilingJeVois 中，我们已经将存储库从 github 提取到虚拟机用户 jevois 的主目录中。如果您想提取最新版本（可能不稳定 - 在您准备好之前不要这样做，默认情况下已经存在的版本是稳定的），您只需在 \b jevois 、\b jevoisbase 等中执行 `git pull` 即可。

然后查看其他 \ref ProgrammerTutorials

*/

